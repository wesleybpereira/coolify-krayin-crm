version: '3.8'

services:
  krayin-db:
    image: 'mysql:8.0'
    container_name: krayin-db
    restart: unless-stopped
    labels:
      - "coolify.exclude=true" 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: krayin
      MYSQL_USER: krayin
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - krayin_db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --skip-log-bin
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - krayin-network

  krayin:
    image: 'webkul/krayin:v2.1.2-https'
    container_name: krayin-app
    restart: unless-stopped
    labels:
      - "coolify.main=true"
      - "coolify.name=Krayin CRM"
    ports:
      - '${APP_PORT:-8082}:80'
    environment:
      - DB_HOST=krayin-db
      - DB_PORT=3306
      - DB_DATABASE=krayin
      - DB_USERNAME=krayin
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - krayin_storage:/var/www/html/laravel-crm
      - krayin_uploads:/var/www/html/public/uploads
    depends_on:
      krayin-db:
        condition: service_healthy
    networks:
      - krayin-network
    command: >
      sh -c "
        echo 'Starting Krayin CRM...' &&
        cd /var/www/html/laravel-crm &&
        
        # Aguarda mais tempo para o banco ficar totalmente pronto
        echo 'Waiting for database to be fully ready...' &&
        sleep 30 &&
        
        # Para MySQL interno se existir
        pkill -f mysql 2>/dev/null || true &&
        
        # Verifica se artisan existe
        if [ ! -f artisan ]; then
          echo 'ERROR: artisan file not found!'
          ls -la /var/www/html/
          exit 1
        fi &&
        
        # Fix composer issues
        export COMPOSER_ALLOW_SUPERUSER=1 &&
        composer dump-autoload --no-scripts --optimize 2>/dev/null || true &&
        
        # Aguarda banco com teste mais robusto
        max_attempts=30 &&
        attempt=0 &&
        until php artisan migrate:status &>/dev/null || [ \$attempt -eq \$max_attempts ]; do
          echo \"Waiting for database... attempt \$((attempt+1))/\$max_attempts\"
          sleep 10
          attempt=\$((attempt+1))
        done &&
        
        if [ \$attempt -eq \$max_attempts ]; then
          echo 'Database connection failed after 30 attempts'
          exit 1
        fi &&
        
        # Limpa cache
        php artisan config:clear &&
        php artisan cache:clear &&
        php artisan route:clear || true &&
        php artisan view:clear || true &&
        
        # Migrations
        php artisan migrate --force &&
        
        # Primeira instalação? (método mais simples)
        if ! php artisan tinker --execute='echo DB::table(\\\"users\\\")->exists() ? \\\"yes\\\" : \\\"no\\\";' 2>/dev/null | grep -q 'yes'; then
          echo 'First time setup...' &&
          php artisan db:seed --force &&
          php artisan passport:install --force --no-interaction &&
          php artisan passport:client --personal --no-interaction --name=KrayinPersonalClient &&
          echo 'Setup complete!'
        fi &&
        
        # Storage link e permissões
        php artisan storage:link &&
        chown -R www-data:www-data storage bootstrap/cache &&
        chmod -R 775 storage bootstrap/cache &&
        
        # Inicia Apache
        echo 'ServerName localhost' >> /etc/apache2/apache2.conf &&
        exec apache2ctl -D FOREGROUND
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      start_period: 180s
      retries: 3

volumes:
  krayin_storage:
  krayin_uploads:
  krayin_db_data:

networks:
  krayin-network: